<AML>
 <Item type="Report" id="BF0A629AADF5459A8FD801E9E41DC514" action="add">
  <location>server</location>
  <method keyed_name="ItemType Definition Report" type="Method">
   <Item type="Method" action="get" select="id">
    <name>ItemType Definition Report</name>
   </Item>
  </method>
  <report_query><![CDATA[<!-- Query defined within the method -->]]></report_query>
  <target>window</target>
  <type>item</type>
  <xsl_stylesheet><![CDATA[<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:user="urn:user-scripts" xmlns:aras="http://www.aras.com" version="1.0">
	  <xsl:output method="html" omit-xml-declaration="yes" standalone="yes" indent="yes" cdata-section-elements="script msxsl:script"/>
	  <xsl:template match="/">
		    <xsl:apply-templates/>
	  </xsl:template>
	  <xsl:template match="/*[local-name()='Envelope']">
		    <xsl:apply-templates/>
	  </xsl:template>
	  <xsl:template match="/*[local-name()='Envelope']/*[local-name()='Body']">
		    <xsl:apply-templates/>
	  </xsl:template>
	  <xsl:template match="/*[local-name()='Envelope']/*[local-name()='Body']/Result">
		    <xsl:apply-templates select="Item"/>
	  </xsl:template>
	  <xsl:template match="Item[@type='ItemType']">
		    <html>
			      <head>
				        <title>
					Item Type Mouse Over Help Text Report for "<xsl:value-of select="name"/>
				"</title>
			      </head>
			      <style>
				       <![CDATA[
				           span.title{font-family:Verdana; font-size:16pt; font-color: red;}
				           td {font-family:Arial; font-size:8pt; padding-left:5px; padding-right:5px; border-width:1;}
				           td.headLabel {font-size:8pt; font-weight:bold; text-align:right; vertical-align:bottom;}
				           td.headValue {font-size:8pt; padding-right:5px; vertical-align:bottom; border-right:solid; border-width:1px;}
				           td.label {font-weight:bold; text-align:center;}
				           td.value {border-style:solid;}
				           td.section {font-size:11pt; background-color:#dddddd;}
				           table {width: 700px}
				           table.border {width: 700px; empty-cells:show; border-collapse:collapse; border-style:solid; border-width:1}
				           table.noborder {width: 700px; empty-cells:show; border-collapse:collapse; border-width:0}
				           th {font-family:Arial; font-size:8pt; border-style:solid; border-width:1; padding-right:5px; padding-left:5px; text-align:center;}
				]]]]><![CDATA[>
			      </style>
			      <style type="text/css" userData="Global">
				.cellSolid {
				border-top:1px #000000 solid;
				border-right:1px #000000 solid;
				border-bottom:1px #000000 solid;
				border-left:1px #000000 solid;
				}
				.cellSolidTopRight {
				border-top:1px #000000 solid;
				border-right:1px #000000 solid;
				}
				.cellSolidTopLeft {
				border-top:1px #000000 solid;
				border-left:1px #000000 solid;
				}
				.cellSolidRightBottom {
				border-right:1px #000000 solid;
				border-bottom:1px #000000 solid;
				}
				.cellSolidBottomLeft {
				border-bottom:1px #000000 solid;
				border-left:1px #000000 solid;
				}
				.cellSolidTop {
				border-top:1px #000000 solid;
				}
				.cellSolidRight {
				border-right:1px #000000 solid;
				}
				.cellSolidBottom {
				border-bottom:1px #000000 solid;
				}
				.cellSolidLeft {
				border-left:1px #000000 solid;
				}
				.cellDashed {
				border-top:1px #666666 dashed;
				border-right:1px #666666 dashed;
				border-bottom:1px #666666 dashed;
				border-left:1px #666666 dashed;
				}
				.cellDashedTopRight {
				border-top:1px #666666 dashed;
				border-right:1px #666666 dashed;
				}
				.cellDashedTopLeft {
				border-top:1px #666666 dashed;
				border-left:1px #666666 dashed;
				}
				.cellDashedBottomRight {
				border-bottom:1px #666666 dashed;
				border-right:1px #666666 dashed;
				}
				.cellDashedBottomLeft {
				border-bottom:1px #666666 dashed;
				border-left:1px #666666 dashed;
				}
				.cellDashedTop {
				border-top:1px #666666 dashed;
				}
				.cellDashedRight {
				border-right:1px #666666 dashed;
				}
				.cellDashedBottom {
				border-bottom:1px #666666 dashed;
				}
				.cellDashedLeft {
				border-left:1px #666666 dashed;
				}
				.cellHeader {
				background-color:#CCCCCC;
				border-top:1px #000000 solid;
				border-right:1px #000000 solid;
				border-bottom:1px #000000 solid;
				padding:2px;
				text-align:center;
				text-transform:capitalize;
				text-align:center;
				font-family:helvetica;
				font-weight:bold;
				font-size:8pt;
				}
				.cellHeaderVertBT {
				background-color:#CCCCCC;
				border-top:1px #000000 solid;
				border-right:1px #000000 solid;
				border-bottom:1px #000000 solid;
				border-left:1px #000000 solid;
				padding:2px;
				writing-mode:tb-rl;filter: flipv fliph;
				text-align:center;
				text-transform:capitalize;
				text-align:center;
				font-family:helvetica;
				font-weight:bold;
				font-size:8pt;
				}
				.cellHeaderVertTB {
				background-color:#CCCCCC;
				border-top:1px #000000 solid;
				border-right:1px #000000 solid;
				border-bottom:1px #000000 solid;
				border-left:1px #000000 solid;
				padding:2px;
				writing-mode:tb-rl;filter: flipv flipv;
				text-align:center;
				text-transform:capitalize;
				text-align:center;
				font-family:helvetica;
				font-weight:bold;
				font-size:8pt;
				}
			</style>
			<body>
				    <!-- ItemType Properties -->
				        <span class="title">
					Item Type Mouse Over Help Text Report for "<xsl:value-of select="name"/>
				"</span>
				        <br/>
				        <br/>
				        <br/>
				    <!-- Properties -->
				        <xsl:if test="boolean(Relationships/Item[@type='Property'])">
					          <table class="border">
						            <tr>
							              <td class="section" colspan="11">
								                <b>Properties</b>
							              </td>
						            </tr>
						            <tr>
							              <th>Property Name</th>
							              <th>Label</th>
							              <th>Data Type</th>
							              <th>Help Text</th>
						      </tr>
						            <xsl:apply-templates select="Relationships/Item[@type='Property']">
							              <xsl:sort select="sort_order" data-type="number"/>
						      </xsl:apply-templates>
					     </table>
				    </xsl:if>
				    <!-- RelationshipTypes -->
				        <xsl:if test="boolean(Relationships/Item[@type='RelationshipType'])"/>
				    <!-- Views -->
				        <xsl:if test="boolean(Relationships/Item[@type='View'])"/>
				    <!-- Server Events -->
				        <xsl:if test="boolean(Relationships/Item[@type='Server Event'][not(starts-with(related_id/@keyed_name,'polymorphic_item_'))])"/>
				    <!-- Item Actions -->
				        <xsl:if test="boolean(Relationships/Item[@type='Item Action'])"/>
				<!-- Workflows -->
				        <xsl:if test="boolean(Relationships/Item[@type='Allowed Workflow'])"/>
				<!-- TOC Access -->
				        <xsl:if test="boolean(Relationships/Item[@type='TOC Access'])"/>
				    <!-- TOC Views -->
				        <xsl:if test="boolean(Relationships/Item[@type='TOC View'])"/>
				    <!-- Client Events -->
				        <xsl:if test="boolean(Relationships/Item[@type='Client Event'])"/>
				    <!-- Can Add -->
				        <xsl:if test="boolean(Relationships/Item[@type='Can Add'])"/>
				    <!-- Permissions -->
				        <xsl:if test="boolean(Relationships/Item[@type='Allowed Permission'])"/>
				    <!-- Reports -->
				        <xsl:if test="boolean(Relationships/Item[@type='Item Report'])"/>
				    <!-- Morphae -->
				        <xsl:if test="boolean(Relationships/Item[@type='Morphae'])"/>
			    </body>
		    </html>
	  </xsl:template>
	  <xsl:template match="Item[@type='Property']">
		    <tr>
			      <td class="value">
				        <xsl:value-of select="name"/>
			      </td>
			      <td class="value">
				        <xsl:value-of select="label"/>
			      </td>
			      <td class="value" style="text-transform:capitalize;">
				        <xsl:value-of select="data_type"/>
				        <xsl:text> </xsl:text>
				        <xsl:choose>
					          <xsl:when test="data_type='string'">
						(<xsl:value-of select="stored_length"/>
					)</xsl:when>
					          <xsl:when test="data_type='item'">
						(<xsl:value-of select="data_source/@keyed_name"/>
					)</xsl:when>
					          <xsl:when test="data_type='list'">
						(<xsl:value-of select="data_source/@keyed_name"/>
					)</xsl:when>
					          <xsl:when test="data_type='sequence'">
						(<xsl:value-of select="data_source/@keyed_name"/>
					)</xsl:when>
					          <xsl:when test="(data_type='decimal' or data_type='float') and prec!=''">(<xsl:value-of select="prec"/>
					.<xsl:value-of select="scale"/>
				)</xsl:when>
			       </xsl:choose>
		     </td>
		      <td class="value">
			        <xsl:value-of select="help_text"/>
		      </td>
	    </tr>
  </xsl:template>
  <!-- Removes system properties that have not been modified -->
  <xsl:template match="Item[@type='Property'][name='behavior'][string(label)=''][string(data_type)='list'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='classification'][string(label)='Classification'][string(data_type)='string'][string(stored_length)='512'][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='config_id'][string(label)=''][string(data_type)='item'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='created_by_id'][string(label)=''][string(data_type)='item'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='created_on'][string(label)=''][string(data_type)='date'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='css'][string(label)=''][string(data_type)='text'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='current_state'][string(label)=''][string(data_type)='item'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='effective_date'][../../is_versionable='1'][string(label)='Effective Date'][string(data_type)='date'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='generation'][string(label)=''][string(data_type)='integer'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='id'][string(label)=''][string(data_type)='item'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='is_current'][string(label)=''][string(data_type)='boolean'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='is_released'][string(label)='Released'][string(data_type)='boolean'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='itemtype'][../../implementation_type='polymorphic'][string(label)='ItemType'][string(data_type)='list'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='0'][string(is_hidden2)='0']"/>
  <xsl:template match="Item[@type='Property'][name='keyed_name'][string(label)=''][string(data_type)='string'][string(stored_length)='128'][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='locked_by_id'][string(label)=''][string(data_type)='item'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='major_rev'][string(label)=''][string(data_type)='string'][string(stored_length)='8'][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='managed_by_id'][string(label)=''][string(data_type)='item'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='minor_rev'][string(label)=''][string(data_type)='string'][string(stored_length)='8'][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='modified_by_id'][string(label)=''][string(data_type)='item'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='modified_on'][string(label)=''][string(data_type)='date'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='new_version'][string(label)=''][string(data_type)='boolean'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='not_lockable'][string(label)='Not Lockable'][string(data_type)='boolean'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='owned_by_id'][string(label)=''][string(data_type)='item'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='permission_id'][string(label)=''][string(data_type)='item'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='release_date'][../../is_versionable='1'][string(label)='Release Date'][string(data_type)='date'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='sort_order'][string(label)=''][string(data_type)='integer'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='state'][string(label)=''][string(data_type)='string'][string(stored_length)='32'][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='Property'][name='superseded_date'][../../is_versionable='1'][string(label)='Superseded Date'][string(data_type)='date'][string(stored_length)=''][string(column_alignment)='left'][string(is_hidden)='1'][string(is_hidden2)='1']"/>
  <xsl:template match="Item[@type='RelationshipType']">
	    <tr>
		      <td class="value" width="25%">
			        <xsl:value-of select="name"/>
		      </td>
		      <td class="value" width="15%">
			        <xsl:value-of select="label"/>
		      </td>
		      <td class="value" width="15%">
			        <xsl:value-of select="related_id/@keyed_name"/>
		      </td>
		      <td class="value" width="35%">
			        <xsl:value-of select="description"/>
		      </td>
		      <xsl:if test="position()=1">
			        <td width="20%" rowspan="{count(../Item[@type='RelationshipType'])}"/>
		      </xsl:if>
	    </tr>
  </xsl:template>
  <xsl:template match="Item[@type='View']">
	    <tr>
		      <td class="value" width="25%">
			        <xsl:value-of select="related_id/@keyed_name"/>
		      </td>
		      <td class="value" width="30%">
			        <xsl:value-of select="related_id/Item/description"/>
		      </td>
		      <td class="value" width="15%">
			        <xsl:value-of select="role/@keyed_name"/>
		      </td>
		      <td class="value" width="10%" style="text-transform:capitalize;">
			        <xsl:value-of select="type"/>
		      </td>
		      <xsl:if test="position()=1">
			        <td width="40%" rowspan="{count(../Item[@type='View'])}"/>
		      </xsl:if>
	    </tr>
  </xsl:template>
  <xsl:template match="Item[@type='Server Event']">
	    <tr>
		      <td class="value" width="20%">
			        <xsl:value-of select="related_id/@keyed_name"/>
		      </td>
		      <td class="value" width="15%">
			        <xsl:value-of select="server_event"/>
		      </td>
		      <xsl:if test="position()=1">
			        <td width="50%" rowspan="{count(../Item[@type='Server Event'])}"/>
		      </xsl:if>
	    </tr>
  </xsl:template>
  <!-- Removes the polyitem server events -->
  <xsl:template match="Item[@type='Server Event'][starts-with(related_id/@keyed_name,'polymorphic_item_')][../../implementation_type='polymorphic']"/>
  <xsl:template match="Item[@type='Item Action']">
	    <tr>
		      <td class="value" width="15%">
			        <xsl:value-of select="related_id/@keyed_name"/>
		      </td>
		      <td class="value" width="15%" style="text-transform:capitalize;">
			        <xsl:value-of select="related_id/Item/type"/>
		      </td>
		      <td class="value" width="15%" style="text-transform:capitalize;">
			        <xsl:value-of select="related_id/Item/location"/>
		      </td>
		      <td class="value" width="15%">
			        <xsl:value-of select="related_id/Item/method/@keyed_name"/>
		      </td>
		      <td class="value" width="15%" style="text-transform:capitalize;">
			        <xsl:value-of select="related_id/Item/target"/>
		      </td>
		      <xsl:if test="position()=1">
			        <td width="50%" rowspan="{count(../Item[@type='Item Action'])}"/>
		      </xsl:if>
	    </tr>
  </xsl:template>
  <xsl:template match="Item[@type='Allowed Workflow']">
	    <tr>
		      <td class="value" width="20%">
			        <xsl:value-of select="related_id/@keyed_name"/>
		      </td>
		      <td class="value" width="25%">
			        <xsl:value-of select="related_id/Item/description"/>
		      </td>
		      <td class="value" width="15%">
			        <xsl:value-of select="related_id/process_owner/@keyed_name"/>
		      </td>
		      <td class="value" width="10%">
			        <xsl:choose>
				          <xsl:when test="is_default='1'">Yes</xsl:when>
				          <xsl:otherwise>No</xsl:otherwise>
			      </xsl:choose>
		     </td>
		      <xsl:if test="position()=1">
			        <td width="30%" rowspan="{count(../Item[@type='Allowed Workflow'])}"/>
		      </xsl:if>
	    </tr>
  </xsl:template>
  <xsl:template match="Item[@type='TOC Access']">
	    <tr>
		      <td class="value" width="15%">
			        <xsl:value-of select="related_id/@keyed_name"/>
		      </td>
		      <td class="value" width="15%">
			        <xsl:value-of select="category"/>
		      </td>
		      <xsl:if test="position()=1">
			        <td width="70%" rowspan="{count(../Item[@type='TOC Access'])}"/>
		      </xsl:if>
	    </tr>
  </xsl:template>
  <xsl:template match="Item[@type='TOC View']">
	    <tr>
		      <td class="value" width="15%">
			        <xsl:value-of select="related_id/@keyed_name"/>
		      </td>
		      <td class="value" width="25%">
			        <xsl:value-of select="start_page"/>
		      </td>
		      <td class="value" width="25%">
			        <xsl:value-of select="parameters"/>
		      </td>
		      <xsl:if test="position()=1">
			        <td width="35%" rowspan="{count(../Item[@type='TOC View'])}"/>
		      </xsl:if>
	    </tr>
  </xsl:template>
  <xsl:template match="Item[@type='Client Event']">
	    <tr>
		      <td class="value" width="20%">
			        <xsl:value-of select="related_id/@keyed_name"/>
		      </td>
		      <td class="value" width="15%">
			        <xsl:value-of select="client_event"/>
		      </td>
		      <xsl:if test="position()=1">
			        <td width="50%" rowspan="{count(../Item[@type='Client Event'])}"/>
		      </xsl:if>
	    </tr>
  </xsl:template>
  <xsl:template match="Item[@type='Can Add']">
	    <tr>
		      <td class="value" width="15%">
			        <xsl:value-of select="related_id/@keyed_name"/>
		      </td>
		      <td class="value" width="10%">
			        <xsl:choose>
				          <xsl:when test="can_add='1'">Yes</xsl:when>
				          <xsl:otherwise>No</xsl:otherwise>
			      </xsl:choose>
		     </td>
		      <xsl:if test="position()=1">
			        <td width="75%" rowspan="{count(../Item[@type='Can Add'])}"/>
		      </xsl:if>
	    </tr>
  </xsl:template>
  <xsl:template match="Item[@type='Allowed Permission']">
	    <tr>
		      <td class="value" width="15%">
			        <xsl:value-of select="related_id/@keyed_name"/>
		      </td>
		      <td class="value" width="10%">
			        <xsl:choose>
				          <xsl:when test="is_default='1'">Yes</xsl:when>
				          <xsl:otherwise>No</xsl:otherwise>
			      </xsl:choose>
		     </td>
		      <xsl:if test="position()=1">
			        <td width="75%" rowspan="{count(../Item[@type='Allowed Permission'])}"/>
		      </xsl:if>
	    </tr>
  </xsl:template>
  <xsl:template match="Item[@type='Item Report']">
	    <tr>
		      <td class="value" width="20%">
			        <xsl:value-of select="related_id/@keyed_name"/>
		      </td>
		      <td class="value" width="25%">
			        <xsl:value-of select="related_id/Item/description"/>
		      </td>
		      <td class="value" width="10%" style="text-transform:capitalize;">
			        <xsl:value-of select="related_id/Item/type"/>
		      </td>
		      <td class="value" width="10%" style="text-transform:capitalize;">
			        <xsl:value-of select="related_id/Item/target"/>
		      </td>
		      <td class="value" width="20%">
			        <xsl:value-of select="related_id/Item/method/@keyed_name"/>
		      </td>
		      <td class="value" width="10%" style="text-transform:capitalize;">
			        <xsl:value-of select="related_id/Item/location"/>
		      </td>
		      <xsl:if test="position()=1">
			        <td width="5%" rowspan="{count(../Item[@type='Item Report'])}"/>
		      </xsl:if>
	    </tr>
  </xsl:template>
  <xsl:template match="Item[@type='Morphae']">
	    <tr>
		      <td class="value" width="15%">
			        <xsl:value-of select="related_id/@keyed_name"/>
		      </td>
		      <td class="value" width="20%">
			        <xsl:value-of select="related_id/description"/>
		      </td>
		      <xsl:if test="position()=1">
			        <td width="75%" rowspan="{count(../Item[@type='Morphae'])}"/>
		      </xsl:if>
	    </tr>
  </xsl:template>
  <xsl:template match="class">
	    <xsl:variable name="level">
		      <xsl:value-of select="count(ancestor::class)"/>
	    </xsl:variable>
	    <xsl:variable name="spacers">
		      <xsl:text>..............................</xsl:text>
	    </xsl:variable>
	    <xsl:value-of select="substring($spacers,1,$level*2)"/>
	    <xsl:value-of select="@name"/>
	    <br/>
	    <xsl:apply-templates select="class"/>
  </xsl:template>
  <xsl:template name="strip-path">
	   <xsl:param name="input"/>
	   <xsl:choose>
		    <xsl:when test="not(contains($input,'/'))">
			<xsl:value-of select="$input"/>
		</xsl:when>
		    <xsl:otherwise>
			     <xsl:call-template name="strip-path">
				      <xsl:with-param name="input" select="substring-after($input,'/')"/>
			     </xsl:call-template>
		    </xsl:otherwise>
	   </xsl:choose>
  </xsl:template>
</xsl:stylesheet>]]></xsl_stylesheet>
  <name>ItemType Glossary Report</name>
 </Item>
</AML>